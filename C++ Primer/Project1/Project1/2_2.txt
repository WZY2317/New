 2.1 介绍一些类型的区别 无符号类型和带符号类型的区别 float和double的区别
它们几个都是整形 short 是两个字节 16位 int 是两个或四个字节（不同机器）但是short一定不能超过int 的长度 long 四个字节 longlong是八个字节 
他们占的比特位不一样 所以可以表示的范围也是不一样的
 有符号可以表示负数零还有正数 无符号表示大于等于0的数 但是正数表示的最大值比有符号的大一倍
float 和double 都是浮点数 分别是 单精度浮点数和双精度浮点数 分别是四个字节和八个字节 默认的小数是double类型 比如 float a=1.3,
就会报错因为要强转才行float a = （float）1.3;

2_2:这些数据有可能是浮点型也可能是整型，因此要用一个浮点型来表示 double较为合适 float可能有点短 long double可能有点长
2_3:注意无符号数一定是大于等于0的就可以了
2_4:略
2_5:'':字符型 ""字符串 L宽字符 也就是每个字符占两个字节，比如汉字就是两个字节一个字，这就是unicode 提高兼容性 uL是无符号长整型，3.14L实际上是long double
2_6:前面加个0表示八进制 09 超过八进制，编译无法通过
2_7:\145 表示字符e \012表示 换行 1024F 表示单精度浮点数 3.14L long double
2_9:略
2_10:内置类型 如int 在函数内没有默认初始值， 对于类 如string 无论定义在哪里都有默认的初始值
2_11:定义   定义并声明  声明 ps：如过我们想声明一个变量而不是定义前面加上 extern
2_12: ac 都是非法的 d也是 注意表示符不可以以数字开头
2_13: 100 ,C++允许内部作用域重新定义变量的值
2_14: 合法，for里面的变量算内层作用域
2_15: 引用必须指向一个实体，并且引用必须被初始化，bd非法
2_16:都是合法的，只要注意到引用是别名的本质即可
2_17:10 10 ri就是i
2_18:改变指针的值实际让指针指向其他变量即可，改变所指对象的值就使用解引用
2_19:引用就是对象的别名，实际上就是原来的对象，引用就是对象的地址；指针本身就是一个对象它被允许赋值和拷贝，不用在定义时赋值，引用就必须被赋值
2_20:让i=i*i
2_21:a-非法，指针类型不匹配；b-非法，指针不可以直接被赋值一个int变量
2_22:检验指针的值是否是空指针；检验指针指向的值是否为NULL/0
2_23:if（p）
2_24:类型不匹配
2_25:只需要知道定义多个变量 *连在哪里都是一样就行了
2_26:const 对象必须被初始化，而且一旦初始化就无法被改变 a，d非法
2_27:a:引用无法引用字面值常量，f 引用不是对象，不能让引用恒定不变 因此非法
2_28:a b c d指针常量要被初始化
2_29:注意常量指针无法被赋值
2_30:略
2_31:非常量可以转化为常量，反之就不行  
const 是默认修饰它左边的符号的 如果左边没有那就修饰右边的 int const *p 修饰int 也就是指向的值不能改变  int* const p 修饰指针也就是指针p不可以被改变
2_32: 非法一个变量无法赋值给一个指针
2_33：注意类型匹配 42无法赋值给一个整型指针
2_36:注意decltype（（d））实际上是d的引用即可
2_37:注意赋值就会产生引用 decltype（a=b）d=a 实际上是int& 的类型
2_38:区别在于auto 是计算表达式的值来推断 decltype 并不计算实际表达式的值 还有就是对于const 的保留 还有 加不加括弧的区别 代码略
2_39:略